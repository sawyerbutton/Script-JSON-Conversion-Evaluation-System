# 场景2（故事大纲）JSON提取Prompt模板

## 系统提示
你是一个专业的故事分析专家，擅长从故事大纲中提取结构化信息并进行合理推断。

## 任务说明
请将以下故事大纲转换为结构化的JSON格式。由于大纲信息可能不完整，你需要根据上下文进行合理推断。

## 故事大纲
{outline_text}

## 输出格式要求
请严格按照以下JSON Schema输出（与场景1类似，但更灵活）：

```json
[
  {
    "scene_id": "场景标识（格式：S0, S1, S2...简化格式，从S0或S1开始）",
    "setting": "场景环境（如果大纲未明确说明，可以推断并标注'推断：...'，或者'背景说明'等）",
    "characters": ["推断的主要角色"],
    "scene_mission": "场景的戏剧功能（这个是核心，必须准确）",
    "key_events": [
      "关键事件1",
      "关键事件2",
      "关键事件3",
      "关键事件4（大纲允许1-5个事件）",
      "关键事件5"
    ],
    "info_change": [
      {
        "character": "角色名或'观众'",
        "learned": "获得的新信息"
      }
    ],
    "relation_change": [
      {
        "chars": ["角色1", "角色2"],
        "from": "原始关系",
        "to": "变化后的关系"
      }
    ],
    "key_object": [
      {
        "object": "物品名称",
        "status": "物品状态或作用"
      }
    ],
    "setup_payoff": {
      "setup_for": ["S3", "S5"],
      "payoff_from": []
    }
  }
]
```

**重要：relation_change格式必须严格遵守**
- 必须使用 "chars" 而不是 "characters"
- 必须使用 "from" 和 "to" 作为字段名
- chars 必须是包含恰好2个角色的数组

## 提取规则（相比场景1更灵活）

### 1. 场景划分
- 根据时间跨越、地点变化、情节转折划分场景
- 大纲可能没有明确的场景标题，需要你根据内容判断
- 场景ID使用简化格式：S1, S2, S3...

### 2. 场景设置
- 如果大纲明确提到地点和时间，直接使用
- 如果没有明确，根据上下文推断，并标注"推断："
- 例如："推断：办公室场景"

### 3. 角色识别
- 提取明确提到的角色
- 如果只提到"主角"、"配角"等，保持这个称呼
- 可以为空列表（如果是环境描写或纯叙述）

### 4. 场景任务（最重要）
- 这是大纲最核心的信息
- 准确概括这个情节段落的叙事功能
- 例如："建立主角的悲惨背景"、"引入反派角色"

### 5. 关键事件
- 大纲的关键事件可能比场景1多（**允许1-5个**）
- 因为大纲是浓缩叙述，一段可能包含多个事件
- 按顺序列出
- 如果事件很多，选择最关键的5个

### 6. 推断与标注
- **允许合理推断**，但要明确标注
- 推断的信息使用"推断："前缀
- 不确定的内容可以用"可能..."表达

### 7. 信息密度
- 大纲的每个场景信息密度通常更高
- 一个大纲场景可能对应多个实际剧本场景
- 关注宏观叙事功能

## 特殊处理规则

### 背景说明段落
如果是纯背景介绍（不是具体场景），可以创建一个特殊场景：
```json
{
  "scene_id": "S0",
  "setting": "背景说明",
  "characters": [],
  "scene_mission": "建立故事世界观和背景",
  "key_events": ["提供的背景信息要点"]
}
```

### 时间跳跃
如果大纲有明显时间跳跃（"三年后"、"同时"），应该划分为新场景。

### 角色弧光
注意关注角色的变化弧光，在relation_change和info_change中体现。

**relation_change格式示例（严格遵守）：**
```json
{
  "chars": ["主角", "反派"],
  "from": "陌生人",
  "to": "宿敌"
}
```
注意：不要使用 "characters" 字段，必须是 "chars"！

## 注意事项
1. **灵活但不随意**：推断要有依据
2. **标注推断内容**：让用户知道哪些是原文，哪些是推断
3. **保持一致性**：角色称呼、场景编号要统一
4. **聚焦叙事功能**：scene_mission是核心
5. **可以简化**：如果某些字段确实无法填写，可以留空数组

## 示例输出（完整格式参考）

### 示例1：背景说明场景
```json
{
  "scene_id": "S0",
  "setting": "背景说明",
  "characters": [],
  "scene_mission": "建立故事世界观",
  "key_events": ["介绍时空背景", "说明主要设定"],
  "info_change": [{"character": "观众", "learned": "故事发生在未来世界"}],
  "relation_change": [],
  "key_object": [],
  "setup_payoff": {"setup_for": ["S1"], "payoff_from": []}
}
```

### 示例2：普通叙事场景
```json
{
  "scene_id": "S1",
  "setting": "推断：城市街道",
  "characters": ["主角", "神秘人"],
  "scene_mission": "展现主角的日常困境并引入冲突",
  "key_events": [
    "主角失业",
    "接到神秘电话",
    "遇到神秘人",
    "接受挑战"
  ],
  "info_change": [
    {
      "character": "观众",
      "learned": "主角处境艰难但勇敢"
    },
    {
      "character": "主角",
      "learned": "有人在寻找他"
    }
  ],
  "relation_change": [
    {
      "chars": ["主角", "神秘人"],
      "from": "陌生",
      "to": "雇佣关系"
    }
  ],
  "key_object": [
    {
      "object": "神秘信封",
      "status": "推动情节的关键物"
    }
  ],
  "setup_payoff": {
    "setup_for": ["S3", "S5"],
    "payoff_from": []
  }
}
```

现在请开始提取，直接输出JSON：
