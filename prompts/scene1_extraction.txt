# 场景1（标准剧本）JSON提取Prompt模板

## 系统提示
你是一个专业的剧本分析专家，擅长从标准格式剧本中提取结构化信息。

## 任务说明
请将以下标准格式剧本转换为结构化的JSON格式。每个场景应该包含完整的信息。

## 剧本文本
{script_text}

## 输出格式要求
请严格按照以下JSON Schema输出：

```json
[
  {
    "scene_id": "场景唯一标识（格式：S01, S02 或 E01S01）",
    "setting": "场景环境（格式：内/外景 地点 - 时间，例如：内景 咖啡馆 - 日）",
    "characters": ["实际出场的角色列表"],
    "scene_mission": "这个场景的核心戏剧任务或目的",
    "key_events": [
      "关键事件1（1-3个重要情节点）",
      "关键事件2",
      "关键事件3"
    ],
    "info_change": [
      {
        "character": "角色名或'观众'",
        "learned": "获得的新信息"
      }
    ],
    "relation_change": [
      {
        "chars": ["角色1", "角色2"],
        "from": "原始关系",
        "to": "变化后的关系"
      }
    ],
    "key_object": [
      {
        "object": "物品名称",
        "status": "物品状态或作用"
      }
    ],
    "setup_payoff": {
      "setup_for": ["为哪些后续场景埋伏笔（场景ID）"],
      "payoff_from": ["回收哪些前序场景的伏笔（场景ID）"]
    }
  }
]
```

## 提取规则

### 1. 场景划分 (scene_id)
- 根据场景标题（通常包含"内景/外景"）划分
- 场景ID从S01开始递增
- 如果有集的概念，使用E01S01格式

### 2. 场景设置 (setting)
- 必须包含：位置类型（内/外景）+ 具体地点 + 时间
- 从场景标题行提取
- 保持原文格式

### 3. 角色识别 (characters)
- 只包含**实际出场**的角色
- 不包括仅被提及的角色
- 以对话或舞台说明中的名字为准

### 4. 场景任务 (scene_mission)
- 简洁概括（10-20字）
- 关注戏剧功能：展现关系变化、推进情节、揭示信息等
- 例如："展现两人矛盾激化"、"揭示真相"

### 5. 关键事件 (key_events)
- 提取1-3个最重要的情节点
- 使用动宾短语，简洁明了
- 按时间顺序排列
- 聚焦转折点、冲突、决策等

### 6. 信息变化 (info_change)
- 记录新信息的获得
- character可以是具体角色或"观众"
- learned要具体明确

### 7. 关系变化 (relation_change)
- 只记录显著的关系转变
- chars必须是两个角色
- from和to描述关系状态

### 8. 关键物品 (key_object)
- 对情节有重要影响的物品
- 不是所有场景都有

### 9. 伏笔照应 (setup_payoff)
- setup_for: 本场景为后续场景埋的伏笔
- payoff_from: 本场景回收了哪些前面的伏笔
- 使用场景ID引用

## 注意事项
1. **严格遵循JSON格式**，确保所有字段都存在
2. **场景边界要准确**，通常以场景标题为分界
3. **角色名称统一**，使用一致的称呼
4. **关键事件要精炼**，不超过3个
5. **信息变化要明确**，有新的认知才算
6. **输出纯JSON**，不要包含任何解释性文字

## 示例输出
```json
[
  {
    "scene_id": "S01",
    "setting": "内景 咖啡馆 - 日",
    "characters": ["李雷", "韩梅梅"],
    "scene_mission": "展现两人关系的裂痕",
    "key_events": [
      "李雷迟到引起不满",
      "韩梅梅发现暧昧短信",
      "两人爆发争吵"
    ],
    "info_change": [
      {
        "character": "韩梅梅",
        "learned": "李雷可能有外遇"
      },
      {
        "character": "观众",
        "learned": "两人感情出现危机"
      }
    ],
    "relation_change": [
      {
        "chars": ["李雷", "韩梅梅"],
        "from": "恋人",
        "to": "产生隔阂的恋人"
      }
    ],
    "key_object": [
      {
        "object": "李雷的手机",
        "status": "显示暧昧短信"
      }
    ],
    "setup_payoff": {
      "setup_for": ["S03"],
      "payoff_from": []
    }
  }
]
```

现在请开始提取：

**输出格式要求**：
1. 如果需要，可以先进行分析思考（使用<think>标签包裹思考内容）
2. 最终输出必须是完整的JSON数组，以 [ 开头，以 ] 结尾
3. JSON可以用```json```代码块包裹，也可以直接输出
4. 确保JSON格式完整、有效，所有字符串正确转义
5. 对于大型剧本，确保输出完整的JSON，不要截断
6. JSON数组应该在思考内容之后（如果有思考的话）

**示例输出格式**（可选思考过程）：
```
<think>
这个剧本有XX个场景...
场景边界判断：...
角色识别：...
</think>

[
  {场景数据...},
  {场景数据...}
]
```
